{"version":3,"sources":["MemoryGame.js"],"names":["MemoryGame","suits","newSuits","mixSuits","memory","document","getElementById","winText","firstCard","secondCard","hasFlippedCard","lockBoard","countTries","countPairs","_that","flipCard","classList","add","matchCard","sort","Math","random","map","i","card","createElement","img_front","img_back","className","addEventListener","id","name","prepend","src","setTimeout","remove","reset","disableCards","unflipCard","removeEventListener","win","innerHTML","ends","count","txt","q","createCards"],"mappings":"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","file":"MemoryGame.53addbde.map","sourceRoot":"..\\src","sourcesContent":["\r\nclass MemoryGame {\r\n  constructor() {\r\n    this.suits = ['0001', '0002', '0003', '0004', '0005', '0006',\r\n      '0007', '0008', '0001', '0002', '0003', '0004', '0005', '0006',\r\n      '0007', '0008',]\r\n    this.newSuits = this.mixSuits(this.suits);\r\n    this.memory = document.getElementById('memory');\r\n    this.winText = document.getElementById('winText');\r\n    this.firstCard = null;\r\n    this.secondCard = null;\r\n    this.hasFlippedCard = false;\r\n    this.lockBoard = false;\r\n    this.countTries = 0;\r\n    this.countPairs = 0;\r\n    const _that = this;\r\n    this.flipCard = function () {\r\n      if (_that.lockBoard) return;\r\n      if (this === _that.firstCard) return;\r\n      this.classList.add('flip');\r\n            \r\n      if (_that.hasFlippedCard == false) {\r\n        _that.hasFlippedCard = true;\r\n        _that.firstCard = this;\r\n        return;\r\n      }\r\n      _that.secondCard = this;\r\n      _that.matchCard();\r\n    }\r\n}\r\n\r\nmixSuits(suits) {\r\n  return suits.sort(() => { return .5 - Math.random() });\r\n}\r\ncreateCards() {\r\n  this.newSuits.map((newSuits, i) => {\r\n    let card = document.createElement('div');\r\n    let img_front = document.createElement('img');\r\n    let img_back = document.createElement('img');\r\n    card.className = 'card';\r\n    card.addEventListener('click', this.flipCard);\r\n    card.id = (`${i}`);\r\n    card.name = `${newSuits}`;\r\n    memory.prepend(card);\r\n    img_back.className = 'back';\r\n    img_back.src = `https://raw.githubusercontent.com/Boardonly/images/master/images/${newSuits}.jpg`;\r\n    img_front.className = 'front';\r\n    img_front.src = `https://raw.githubusercontent.com/Boardonly/images/master/images/back.jpg`;\r\n    card.prepend(img_back, img_front);\r\n  })\r\n}\r\n\r\n// flipCard () {\r\n//   if (this.lockBoard) return;\r\n//   if (this === this.firstCard) return;\r\n//   this.classList.add('flip');\r\n//   console.log(this);\r\n  \r\n//   if (this.hasFlippedCard == false) {\r\n//     this.hasFlippedCard = true;\r\n//     this.firstCard = this;\r\n//     console.log(this.firstCard);\r\n//     return;\r\n//   }\r\n//   this.secondCard = this;\r\n//   console.log(this.secondCard, 2);\r\n//   () => matchCard();\r\n// }\r\n\r\n\r\nunflipCard() {\r\n  this.lockBoard = true;\r\n  setTimeout(() => {\r\n    this.firstCard.classList.remove('flip');\r\n    this.secondCard.classList.remove('flip');\r\n    this.reset();\r\n  }, 750);\r\n}\r\n\r\nmatchCard() {\r\n  this.countTries += 1;\r\n  if (this.firstCard.name === this.secondCard.name) {\r\n    this.disableCards()\r\n  } else {\r\n    this.unflipCard();\r\n  }\r\n}\r\n\r\ndisableCards() {\r\n  this.firstCard.removeEventListener('click', this.flipCard);\r\n  this.secondCard.removeEventListener('click', this.flipCard);\r\n  this.countPairs += 1;\r\n  this.win()\r\n  this.reset();\r\n}\r\n\r\nreset() {\r\n  this.hasFlippedCard = false;\r\n  this.lockBoard = false;\r\n  this.firstCard = null;\r\n  this.secondCard = null;\r\n}\r\n\r\nwin() {\r\n  if (this.countPairs === 8) {\r\n    this.winText.innerHTML = `Ура. Это Победа за ${this.countTries} ${this.ends()}!!!`;\r\n  }\r\n}\r\nends() {\r\n  let count = this.countTries % 100;\r\n  if (count >= 5 && count <= 20) {\r\n    this.txt = 'ходов';\r\n  } else {\r\n    count = count % 10;\r\n    if (count == 1) {\r\n      this.txt = 'ход';\r\n    } else if (count >= 2 && count <= 4) {\r\n      this.txt = 'хода';\r\n    }\r\n  }\r\n  return this.txt;\r\n}\r\n}\r\n\r\nlet q = new MemoryGame();\r\nq.createCards();\r\n"]}